archi:
    backbone: resnet101
    backbone_strides:
        - 4
        - 8
        - 16
        - 32
        - 64
    fpn_classif_fc_layers_size: 1024
    top_down_pyramid_size: 256

    # RPN
    rpn_anchor_scales:
        - 64
        - 128
        - 256
    rpn_anchor_ratios:
        - 0.5
        - 1
        - 2
    rpn_anchor_stride: 1
    rpn_nms_threshold: 0.7
    rpn_train_anchors_per_image: 256

    # Use RPN ROIs or externally generated ROIs for training
    # Keep this True for most situations. Set to False if you want to train
    # the head branches on ROI generated by code rather than the ROIs from
    # the RPN. For example, to debug the classifier head without having to
    # train the RPN.
    use_rpn_rois: true

    # ROIs kept after tf.nn.top_k and before non-maximum suppression
    pre_nms_limit: 6000

    # ROIs kept after non-maximum suppression (training and inference)
    post_nms_rois_training: 2000
    post_nms_rois_inference: 1000

    # Number of ROIs per image to feed to classifier/mask heads
    # The Mask RCNN paper uses 512 but often the RPN doesn't generate
    # enough positive proposals to fill this and keep a positive:negative
    # ratio of 1:3. You can increase the number of proposals by adjusting
    # the RPN NMS threshold.
    train_rois_per_image: 200

    # Percent of positive ROIs used to train classifier/mask heads
    roi_positive_ratio: 0.33

    # Pooled ROIs
    pool_size: 7
    mask_pool_size: 14

    # Maximum number of ground truth instances to use in one image
    max_gt_instances: 100

    # Bounding box refinement standard deviation for RPN and final detections.
    rpn_bbox_std_dev:
        - 0.1
        - 0.1
        - 0.2
        - 0.2
    bbox_std_dev:
        - 0.1
        - 0.1
        - 0.2
        - 0.2

    # Max number of final detections
    detection_max_instances: 100

    # Minimum prob to accept a detected instance (ROIs below are skipped)
    detection_min_confidence: 0.7

    # Non-maximum suppression threshold for detection
    detection_nms_threshold: 0.3

    # Train or freeze batch normalization layers
    #     None: Train BN layers. This is the normal mode
    #     False: Freeze BN layers. Good when using a small batch size
    #     True: (don't use). Set layer in training mode even when predicting
    train_bn: false  # Defaulting to False since batch size is often small


training:

    # Gradient norm clipping
    gradient_clip_nom: 5.0